
# append this file to /etc/bash.bashrc
# test with source ./global_functions



# declare global kiosk functions

# Usage:
# exit_if_disabled [service]
exit_if_disabled() {
  read -r SWITCH <"/opt/kiosk/services/$1"  
  test "$SWITCH" = 'enabled' || exit # FIXME: add message if disabled
}

# Usage:
# kiosklog [service] [message]
kiosklog() {
  logger -s -- "$0: $*"
  echo "$( date ): $0: $*" >>"/opt/kiosk/logs/kiosk.log" 
  echo "$( date ): $0: $*" >>"/opt/kiosk/logs/$1.log" 
}

# Usage: 
# kioskctl enable chromium-browser
kioskctl(){
  echo "service $2 is $1d"
  echo "$1d" > "/opt/kiosk/services/$2"
  kiosklog "kiosk" "service $2 is $1d now"
}


kioskstatus(){
	printf "\n===  RO / RW  ===\n"
	echo "$( print_mount_status ) mounted"

	printf "\n===  IP + MAC  ===\n"
	echo "IPv4  	$( myip4 )" 
	echo "IPv6  	$( myip6 )"
	echo "MAC  		$( first_ethernet_mac )"
	

	printf "\n===  SERVICES  ===\n"
	cd /opt/kiosk/services/
	tail *

	printf "\n===  LOGS  ===\n"
	cd /opt/kiosk/logs
	tail *
}


# kioskmount ro|rw
kioskmount(){
	if $1=="ro" then
		sudo mv /etc/overlayroot.local.conf.disabled /etc/overlayroot.local.conf
		echo "ro mounted after reboot"
	else
		sudo mv /etc/overlayroot.local.conf /etc/overlayroot.local.conf.disabled
		echo "rw mounted after reboot"
	fi
	echo "Press key to reboot now"
	read X
	sudo reboot
}


kiosktest(){
	echo ""
	# FIXME
	# check screensaver

	# check energy save option

	# check disabled updates

	# check disabled notifications
	notify-send "This should be invisible"

	# check permissions?

}


kioskdir(){
	cd /opt/tmp/kiosksystem/
}





print_mount_status(){
	mount | grep -q 'overlayroot' && echo "ro" ||Â "rw"
}

defaultroute_dev(){
	ip route list exact '0.0.0.0/0' | cut -d' ' -f5
}

myip4(){
	set -- $( ip address show dev "$(defaultroute_dev)" | fgrep 'inet ' | head -n1 )
	echo ${2:-no_ipV4}
}

myip6(){
	set -- $( ip address show dev "$(defaultroute_dev)" | fgrep 'inet6 ' | head -n1 )
	echo ${2:-no_ipV6}
}

first_ethernet_mac(){
	ip --oneline link show |
	 fgrep '<BROADCAST,MULTICAST,UP,LOWER_UP' |
	  sed 's|.*link/ether \(.*\) brd.*|\1|'
}





